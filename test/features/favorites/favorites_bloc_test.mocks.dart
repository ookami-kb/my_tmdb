// Mocks generated by Mockito 5.3.2 from annotations
// in my_tmdb/test/features/favorites/favorites_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dfunc/dfunc.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_tmdb/src/core/content.dart' as _i5;
import 'package:my_tmdb/src/features/auth/module.dart' as _i6;
import 'package:my_tmdb/src/features/favorites/src/favorites_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesRepository extends _i1.Mock
    implements _i3.FavoritesRepository {
  MockFavoritesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<Exception, void>> addToFavorites({
    required _i5.ContentId? id,
    required _i6.Authenticated? info,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorites,
          [],
          {
            #id: id,
            #info: info,
          },
        ),
        returnValue: _i4.Future<_i2.Either<Exception, void>>.value(
            _FakeEither_0<Exception, void>(
          this,
          Invocation.method(
            #addToFavorites,
            [],
            {
              #id: id,
              #info: info,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<Exception, void>>);
  @override
  _i4.Future<_i2.Either<Exception, void>> removeFromFavorites({
    required _i5.ContentId? id,
    required _i6.Authenticated? info,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorites,
          [],
          {
            #id: id,
            #info: info,
          },
        ),
        returnValue: _i4.Future<_i2.Either<Exception, void>>.value(
            _FakeEither_0<Exception, void>(
          this,
          Invocation.method(
            #removeFromFavorites,
            [],
            {
              #id: id,
              #info: info,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<Exception, void>>);
  @override
  _i4.Future<_i2.Either<Exception, bool>> isFavorite({
    required _i5.ContentId? id,
    required String? sessionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [],
          {
            #id: id,
            #sessionId: sessionId,
          },
        ),
        returnValue: _i4.Future<_i2.Either<Exception, bool>>.value(
            _FakeEither_0<Exception, bool>(
          this,
          Invocation.method(
            #isFavorite,
            [],
            {
              #id: id,
              #sessionId: sessionId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<Exception, bool>>);
}
